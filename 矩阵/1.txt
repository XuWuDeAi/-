#include <iostream>
#include <conio.h>
#include <stdio.h>
#include <malloc.h>
using namespace std;
#define  MAXSIZE 100
typedef int ElemType;	//数据元素的类型为ElemType，将ElemType定义为int类型



/* --------------------结构体定义 ------------------------ */


typedef struct     //三元组的类型定义
{    
    int  row;    //非零元素行号
	int  col;    //非零元素列号
    ElemType  val;	//非零元素值
}tupletype;




typedef struct      //三元组顺序表存储结构定义
{	tupletype data[MAXSIZE];		//非零元素的三元组表
    int  rnum;    	//矩阵行数
	int  cnum;   	//矩阵列数
	int  len;   	//矩阵总非零元素个数 
}table;


/* --------------------------------------------------- */




/* --------------------函数声明---------------------- */












/* -------------------------------------------------------- */



/* --------------------- 函数定义 -------------------------- */




void Inittable(table *m)	//对稀疏矩阵的三元组表初始化为0
{
	m->cnum=0;m->rnum=0;m->len=0;
	
}


/* --------------------- mian函数 -------------------------- */
int main()
{
	char option;
	ElemType x;
	int i;



	cout<<endl;
	cout<<"*******************稀疏矩阵运算主菜单*******************"<<endl;
	cout<<" 1.进行稀疏矩阵的普通方法转置"<<endl;
	cout<<" 2.进行稀疏矩阵的分段定位方法转置(即快速转置)"<<endl;
	cout<<" 3.进行稀疏矩阵的加法运算(即a+b)"<<endl;
	cout<<" 4.查找稀疏矩阵的i行j列的值"<<endl;
	cout<<" 5.修改稀疏矩阵的i行j列的值"<<endl;
	cout<<" 6.退出"<<endl;
	cout<<"********************************************************"<<endl;
	while (1)
	{
		cout<<"---------------------------------------- "<<endl;

		cout<<" 选择你要的操作 (1 - 6): ";
		
		option = getche();	//获取用户输入的操作符号
		cout<<endl;

		switch (option)
		{
		case '1':




			break;
		case '2':




			break;
		case '3':



			break;
		case '4':

			


			break;
		case '5':

			


		break;
		case '6':

			

			return 0;
		}
	}

}